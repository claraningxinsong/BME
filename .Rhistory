HR.Sc.threshold = 0.9,
hazard_S  = log(2)/c(9, 9/HRs[i, "hrS"]), #currently assume med is same for BM+ and BM- in control
hazard_Sc = log(2)/c(9, 9/HRs[i, "hrSc"]),
dropout_S = c(0, 0),
dropout_Sc = c(0, 0),
w = 1,
ratio = 1,
alpha1 = 0.0125,
alpha2 = 0.0125
)
# Extract statistics
PowerF <- sapply(res, function(x) x$reject$F_reject)
PowerS <- sapply(res, function(x) x$reject$S_reject)
p_Fs <- sapply(res, function(x) x$reject$p_F)
p_Ss <- sapply(res, function(x) x$reject$p_S)
expansion <- sapply(res, function(x) x$expand)
# Store results
results[i, ] <- c(
mean(PowerF),
mean(PowerS),
mean(p_Fs <= alpha1 | p_Ss <= alpha2 ),
mean(expansion),
600 + 100 * mean(expansion)
)
}
results_df <- as.data.frame(cbind(HRs, results))
print(results_df)
# Define hazard ratios
HRs <- cbind(
hrS = c(1, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7),
hrSc = c(1, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2)
)
# Initialize results
results <- matrix(NA, nrow = nrow(HRs), ncol = 5)
colnames(results) <- c("Power f",
"Power S",
"Overall Power",
"Probability of Expansion",
"Average Sample Size")
alpha1 = 0.0125
alpha2 = 0.0125
# Loop over each scenario
for (i in 1:nrow(HRs)) {
# Run simulation
res <- getOC_BME(
seed = 2025,
nsim = 50,
nF = 600,
nS_additional = 100,
prop_S = 0.5,
duration = 20,
duration_additional = 3,
targetEvents.Sc = 105,
targetEvents = c(210, 280, 420),
HR.Sc.threshold = 0.9,
hazard_S  = log(2)/c(9, 9/HRs[i, "hrS"]), #currently assume med is same for BM+ and BM- in control
hazard_Sc = log(2)/c(9, 9/HRs[i, "hrSc"]),
dropout_S = c(0, 0),
dropout_Sc = c(0, 0),
w = 1,
ratio = 1,
alpha1 = 0.0125,
alpha2 = 0.0125
)
# Extract statistics
PowerF <- sapply(res, function(x) x$reject$F_reject)
PowerS <- sapply(res, function(x) x$reject$S_reject)
p_Fs <- sapply(res, function(x) x$reject$p_F)
p_Ss <- sapply(res, function(x) x$reject$p_S)
expansion <- sapply(res, function(x) x$expand)
# Store results
results[i, ] <- c(
mean(PowerF),
mean(PowerS),
mean(PowerF | PowerS ),
mean(expansion),
600 + 100 * mean(expansion)
)
}
results_df <- as.data.frame(cbind(HRs, results))
print(results_df)
# Define hazard ratios
HRs <- cbind(
hrS = c(1, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7),
hrSc = c(1, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2)
)
# Initialize results
results <- matrix(NA, nrow = nrow(HRs), ncol = 5)
colnames(results) <- c("Power f",
"Power S",
"Overall Power",
"Probability of Expansion",
"Average Sample Size")
alpha1 = 0.0125
alpha2 = 0.0125
# Loop over each scenario
for (i in 1:nrow(HRs)) {
# Run simulation
res <- getOC_BME(
seed = 2025,
nsim = 50,
nF = 600,
nS_additional = 100,
prop_S = 0.5,
duration = 20,
duration_additional = 3,
targetEvents.Sc = 105,
targetEvents = c(210, 280, 420),
HR.Sc.threshold = 0.9,
hazard_S  = log(2)/c(9, 9/HRs[i, "hrS"]), #currently assume med is same for BM+ and BM- in control
hazard_Sc = log(2)/c(9, 9/HRs[i, "hrSc"]),
dropout_S = c(0, 0),
dropout_Sc = c(0, 0),
w = 1,
ratio = 1,
alpha1 = 0.0125,
alpha2 = 0.0125
)
# Extract statistics
p_Fs <- sapply(res, function(x) x$reject$F_reject)
p_Ss <- sapply(res, function(x) x$reject$S_reject)
expansion <- sapply(res, function(x) x$expand)
# Store results
results[i, ] <- c(
mean(p_Fs),
mean(p_Ss),
mean(p_Fs | p_Ss),
mean(expansion),
600 + 100 * mean(expansion)
)
}
results_df <- as.data.frame(cbind(HRs, results))
print(results_df)
# Define hazard ratios
HRs <- cbind(
hrS = c(1, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7),
hrSc = c(1, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2)
)
# Initialize results
results <- matrix(NA, nrow = nrow(HRs), ncol = 5)
colnames(results) <- c("Power f",
"Power S",
"Overall Power",
"Probability of Expansion",
"Average Sample Size")
alpha1 = 0.0125
alpha2 = 0.0125
# Loop over each scenario
for (i in 1:nrow(HRs)) {
# Run simulation
res <- getOC_BME(
seed = 2025,
nsim = 500,
nF = 600,
nS_additional = 100,
prop_S = 0.5,
duration = 20,
duration_additional = 3,
targetEvents.Sc = 105,
targetEvents = c(210, 280, 420),
HR.Sc.threshold = 0.9,
hazard_S  = log(2)/c(9, 9/HRs[i, "hrS"]), #currently assume med is same for BM+ and BM- in control
hazard_Sc = log(2)/c(9, 9/HRs[i, "hrSc"]),
dropout_S = c(0, 0),
dropout_Sc = c(0, 0),
w = 1,
ratio = 1,
alpha1 = 0.0125,
alpha2 = 0.0125
)
# Extract statistics
p_Fs <- sapply(res, function(x) x$reject$F_reject)
p_Ss <- sapply(res, function(x) x$reject$S_reject)
expansion <- sapply(res, function(x) x$expand)
# Store results
results[i, ] <- c(
mean(p_Fs),
mean(p_Ss),
mean(p_Fs | p_Ss),
mean(expansion),
600 + 100 * mean(expansion)
)
}
results_df <- as.data.frame(cbind(HRs, results))
print(results_df)
# Define hazard ratios
HRs <- cbind(
hrS = c(1, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7),
hrSc = c(1, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2)
)
# Initialize results
results <- matrix(NA, nrow = nrow(HRs), ncol = 5)
colnames(results) <- c("Power f",
"Power S",
"Overall Power",
"Probability of Expansion",
"Average Sample Size")
alpha1 = 0.0125
alpha2 = 0.0125
# Loop over each scenario
for (i in 1:nrow(HRs)) {
# Run simulation
res <- getOC_BME(
seed = 2025,
nsim = 5000,
nF = 600,
nS_additional = 100,
prop_S = 0.5,
duration = 20,
duration_additional = 3,
targetEvents.Sc = 105,
targetEvents = c(210, 280, 420),
HR.Sc.threshold = 0.9,
hazard_S  = log(2)/c(9, 9/HRs[i, "hrS"]), #currently assume med is same for BM+ and BM- in control
hazard_Sc = log(2)/c(9, 9/HRs[i, "hrSc"]),
dropout_S = c(0, 0),
dropout_Sc = c(0, 0),
w = 1,
ratio = 1,
alpha1 = 0.0125,
alpha2 = 0.0125
)
# Extract statistics
p_Fs <- sapply(res, function(x) x$reject$F_reject)
p_Ss <- sapply(res, function(x) x$reject$S_reject)
expansion <- sapply(res, function(x) x$expand)
# Store results
results[i, ] <- c(
mean(p_Fs),
mean(p_Ss),
mean(p_Fs | p_Ss),
mean(expansion),
600 + 100 * mean(expansion)
)
}
results_df <- as.data.frame(cbind(HRs, results))
print(results_df)
res <- getOC_BME(seed = 2025, nsim = 2, nF = 600, nS_additional = 100,  prop_S = 0.5,
duration = 20, duration_additional = 3,
targetEvents.Sc = 105,  targetEvents = c(210, 280, 420),
HR.Sc.threshold = 0.9,
hazard_S = c(1, 1), hazard_Sc = c(1, 1),
dropout_S = c(0, 0), dropout_Sc = c(0, 0), w = 1, ratio = 1,
alpha1 = 0.0125, alpha2 = 0.0125)
res[1]
devtools::load_all(".")
# Define hazard ratios
HRs <- cbind(
hrS = c(1, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7),
hrSc = c(1, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2)
)
# Initialize results
results <- matrix(NA, nrow = nrow(HRs), ncol = 5)
colnames(results) <- c("Power f",
"Power S",
"Overall Power",
"Probability of Expansion",
"Average Sample Size")
alpha1 = 0.0125
alpha2 = 0.0125
# Loop over each scenario
for (i in 1:nrow(HRs)) {
# Run simulation
res <- getOC_BME(
seed = 2025,
nsim = 10000,
nF = 600,
nS_additional = 100,
prop_S = 0.5,
duration = 20,
duration_additional = 3,
targetEvents.Sc = 105,
targetEvents = c(210, 280, 420),
HR.Sc.threshold = 0.9,
hazard_S  = log(2)/c(9, 9/HRs[i, "hrS"]), #currently assume med is same for BM+ and BM- in control
hazard_Sc = log(2)/c(9, 9/HRs[i, "hrSc"]),
dropout_S = c(0, 0),
dropout_Sc = c(0, 0),
w = 1,
ratio = 1,
alpha1 = 0.0125,
alpha2 = 0.0125
)
# Extract statistics
p_Fs <- sapply(res, function(x) x$reject$F_reject)
p_Ss <- sapply(res, function(x) x$reject$S_reject)
expansion <- sapply(res, function(x) x$expand)
# Store results
results[i, ] <- c(
mean(p_Fs),
mean(p_Ss),
mean(p_Fs | p_Ss),
mean(expansion),
600 + 100 * mean(expansion)
)
}
results_df <- as.data.frame(cbind(HRs, results))
print(results_df)
# Define hazard ratios
HRs <- cbind(
hrS = c(1, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7),
hrSc = c(1, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2)
)
# Initialize results
results <- matrix(NA, nrow = nrow(HRs), ncol = 5)
colnames(results) <- c("Power f",
"Power S",
"Overall Power",
"Probability of Expansion",
"Average Sample Size")
alpha1 = 0.0125
alpha2 = 0.0125
# Loop over each scenario
for (i in 1:nrow(HRs)) {
# Run simulation
res <- getOC_BME(
seed = 2025,
nsim = 100,
nF = 600,
nS_additional = 100,
prop_S = 0.5,
duration = 20,
duration_additional = 3,
targetEvents.Sc = 105,
targetEvents = c(210, 280, 420),
HR.Sc.threshold = 0.9,
hazard_S  = log(2)/c(9, 9/HRs[i, "hrS"]), #currently assume med is same for BM+ and BM- in control
hazard_Sc = log(2)/c(9, 9/HRs[i, "hrSc"]),
dropout_S = c(0, 0),
dropout_Sc = c(0, 0),
w = 1,
ratio = 1,
alpha1 = 0.0125,
alpha2 = 0.0125
)
# Extract statistics
p_Fs <- sapply(res, function(x) x$reject$F_reject)
p_Ss <- sapply(res, function(x) x$reject$S_reject)
expansion <- sapply(res, function(x) x$expand)
# Store results
results[i, ] <- c(
mean(p_Fs),
mean(p_Ss),
mean(p_Fs | p_Ss),
mean(expansion),
600 + 100 * mean(expansion)
)
}
results_df <- as.data.frame(cbind(HRs, results))
print(results_df)
# Define hazard ratios
HRs <- cbind(
hrS = c(1, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7),
hrSc = c(1, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2)
)
# Initialize results
results <- matrix(NA, nrow = nrow(HRs), ncol = 5)
colnames(results) <- c("Power f",
"Power S",
"Overall Power",
"Probability of Expansion",
"Average Sample Size")
alpha1 = 0.0125
alpha2 = 0.0125
# Loop over each scenario
for (i in 1:nrow(HRs)) {
# Run simulation
res <- getOC_BME(
seed = 2025,
nsim = 5000,
nF = 600,
nS_additional = 100,
prop_S = 0.5,
duration = 20,
duration_additional = 3,
targetEvents.Sc = 105,
targetEvents = c(210, 280, 420),
HR.Sc.threshold = 0.9,
hazard_S  = log(2)/c(9, 9/HRs[i, "hrS"]), #currently assume med is same for BM+ and BM- in control
hazard_Sc = log(2)/c(9, 9/HRs[i, "hrSc"]),
dropout_S = c(0, 0),
dropout_Sc = c(0, 0),
w = 1,
ratio = 1,
alpha1 = 0.0125,
alpha2 = 0.0125
)
# Extract statistics
p_Fs <- sapply(res, function(x) x$reject$F_reject)
p_Ss <- sapply(res, function(x) x$reject$S_reject)
expansion <- sapply(res, function(x) x$expand)
# Store results
results[i, ] <- c(
mean(p_Fs),
mean(p_Ss),
mean(p_Fs | p_Ss),
mean(expansion),
600 + 100 * mean(expansion)
)
}
results_df <- as.data.frame(cbind(HRs, results))
print(results_df)
# Define hazard ratios
HRs <- cbind(
hrS = c(1, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7),
hrSc = c(1, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2)
)
# Initialize results
results <- matrix(NA, nrow = nrow(HRs), ncol = 5)
colnames(results) <- c("Power f",
"Power S",
"Overall Power",
"Probability of Expansion",
"Average Sample Size")
alpha1 = 0.0125
alpha2 = 0.0125
# Loop over each scenario
for (i in 1:nrow(HRs)) {
# Run simulation
res <- getOC_BME(
seed = 2025,
nsim = 10,
nF = 600,
nS_additional = 100,
prop_S = 0.5,
duration = 20,
duration_additional = 3,
targetEvents.Sc = 105,
targetEvents = c(210, 280, 420),
HR.Sc.threshold = 0.9,
hazard_S  = log(2)/c(9, 9/HRs[i, "hrS"]), #currently assume med is same for BM+ and BM- in control
hazard_Sc = log(2)/c(9, 9/HRs[i, "hrSc"]),
dropout_S = c(0, 0),
dropout_Sc = c(0, 0),
w = 1,
ratio = 1,
alpha1 = 0.0125,
alpha2 = 0.0125
)
# Extract statistics
p_Fs <- sapply(res, function(x) x$reject$F_reject)
p_Ss <- sapply(res, function(x) x$reject$S_reject)
expansion <- sapply(res, function(x) x$expand)
# Store results
results[i, ] <- c(
mean(p_Fs),
mean(p_Ss),
mean(p_Fs | p_Ss),
mean(expansion),
600 + 100 * mean(expansion)
)
}
results_df <- as.data.frame(cbind(HRs, results))
print(results_df)
# Define hazard ratios
HRs <- cbind(
hrS = c(1, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7),
hrSc = c(1, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2)
)
# Initialize results
results <- matrix(NA, nrow = nrow(HRs), ncol = 5)
colnames(results) <- c("Power f",
"Power S",
"Overall Power",
"Probability of Expansion",
"Average Sample Size")
alpha1 = 0.0125
alpha2 = 0.0125
# Loop over each scenario
for (i in 1:nrow(HRs)) {
# Run simulation
res <- getOC_BME(
seed = 2025,
nsim = 10000,
nF = 600,
nS_additional = 100,
prop_S = 0.5,
duration = 20,
duration_additional = 3,
targetEvents.Sc = 105,
targetEvents = c(210, 280, 420),
HR.Sc.threshold = 0.9,
hazard_S  = log(2)/c(9, 9/HRs[i, "hrS"]), #currently assume med is same for BM+ and BM- in control
hazard_Sc = log(2)/c(9, 9/HRs[i, "hrSc"]),
dropout_S = c(0, 0),
dropout_Sc = c(0, 0),
w = 1,
ratio = 1,
alpha1 = 0.0125,
alpha2 = 0.0125
)
# Extract statistics
p_Fs <- sapply(res, function(x) x$reject$F_reject)
p_Ss <- sapply(res, function(x) x$reject$S_reject)
expansion <- sapply(res, function(x) x$expand)
# Store results
results[i, ] <- c(
mean(p_Fs),
mean(p_Ss),
mean(p_Fs | p_Ss),
mean(expansion),
600 + 100 * mean(expansion)
)
}
results_df <- as.data.frame(cbind(HRs, results))
print(results_df)
ggplot(results_df, aes(x = scenario, y = `Overall Power`, group = 1)) +
geom_line(color = "blue") + # Use geom_line for connecting points
geom_point(color = "blue", size = 3) + # Add points for each scenario
labs(title = "Overall Power by Scenario",
x = "Scenario (hrS, hrSc)",
y = "Overall Power")
