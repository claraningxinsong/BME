"0","library(parallel)"
"0",""
"0","# Define hazard ratios "
"0","HRs <- cbind("
"0","  hrS = c(1, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7),"
"0","  hrSc = c(1, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2)"
"0",")"
"0",""
"0","simulate_scenario <- function(i, HRs) {"
"0","  hazard_S  <- log(2)/c(9, 9 / HRs[i, ""hrS""])"
"0","  hazard_Sc <- log(2)/c(9, 9 / HRs[i, ""hrSc""])"
"0","  "
"0","  res <- getOC_BME("
"0","    seed = 2025 + i,"
"0","    nsim = 5000,"
"0","    nF = 600,"
"0","    nS_additional = 100,"
"0","    prop_S = 0.5,"
"0","    duration = 20,"
"0","    duration_additional = 3,"
"0","    targetEvents.Sc = 105,"
"0","    targetEvents = c(210, 280, 420),"
"0","    HR.Sc.threshold = 0.9,"
"0","    hazard_S  = hazard_S,"
"0","    hazard_Sc = hazard_Sc,"
"0","    dropout_S = c(0, 0),"
"0","    dropout_Sc = c(0, 0),"
"0","    w = 1,"
"0","    ratio = 1,"
"0","    alpha1 = 0.0125,"
"0","    alpha2 = 0.0125"
"0","  )"
"0","  "
"0","  power.Fs <- res$F.reject"
"0","  power.Ss <- res$S.reject"
"0","  expansion <- res$expand"
"0","  "
"0","  return(c("
"0","    Power_F = mean(power.Fs),"
"0","    Power_S = mean(power.Ss),"
"0","    Overall_Power = mean(power.Fs | power.Ss),"
"0","    Prob_Expand = mean(expansion),"
"0","    Avg_Sample_Size = 600 + 100 * mean(expansion)"
"0","  ))"
"0","}"
"0",""
"0","# Setup parallel cluster"
"0","n_cores <- detectCores() - 1"
"0","cl <- makeCluster(n_cores)"
"0",""
"0","# Load required packages inside each worker"
"0","clusterEvalQ(cl, {"
"0","  library(dplyr)  # Required because arrange is used somewhere"
"0","})"
"1","[[1]]
"
"1","[1]"
"1"," ""dplyr""    "
"1"," ""stats""    "
"1"," ""graphics"" "
"1"," ""grDevices"""
"1"," ""utils""    "
"1"," ""datasets"" "
"1"," ""methods""  "
"1","
"
"1","[8]"
"1"," ""base""     "
"1","
"
"1","
"
"1","[[2]]
"
"1","[1]"
"1"," ""dplyr""    "
"1"," ""stats""    "
"1"," ""graphics"" "
"1"," ""grDevices"""
"1"," ""utils""    "
"1"," ""datasets"" "
"1"," ""methods""  "
"1","
"
"1","[8]"
"1"," ""base""     "
"1","
"
"1","
"
"1","[[3]]
"
"1","[1]"
"1"," ""dplyr""    "
"1"," ""stats""    "
"1"," ""graphics"" "
"1"," ""grDevices"""
"1"," ""utils""    "
"1"," ""datasets"" "
"1"," ""methods""  "
"1","
"
"1","[8]"
"1"," ""base""     "
"1","
"
"1","
"
"1","[[4]]
"
"1","[1]"
"1"," ""dplyr""    "
"1"," ""stats""    "
"1"," ""graphics"" "
"1"," ""grDevices"""
"1"," ""utils""    "
"1"," ""datasets"" "
"1"," ""methods""  "
"1","
"
"1","[8]"
"1"," ""base""     "
"1","
"
"1","
"
"1","[[5]]
"
"1","[1]"
"1"," ""dplyr""    "
"1"," ""stats""    "
"1"," ""graphics"" "
"1"," ""grDevices"""
"1"," ""utils""    "
"1"," ""datasets"" "
"1"," ""methods""  "
"1","
"
"1","[8]"
"1"," ""base""     "
"1","
"
"1","
"
"1","[[6]]
"
"1","[1]"
"1"," ""dplyr""    "
"1"," ""stats""    "
"1"," ""graphics"" "
"1"," ""grDevices"""
"1"," ""utils""    "
"1"," ""datasets"" "
"1"," ""methods""  "
"1","
"
"1","[8]"
"1"," ""base""     "
"1","
"
"1","
"
"1","[[7]]
"
"1","[1]"
"1"," ""dplyr""    "
"1"," ""stats""    "
"1"," ""graphics"" "
"1"," ""grDevices"""
"1"," ""utils""    "
"1"," ""datasets"" "
"1"," ""methods""  "
"1","
"
"1","[8]"
"1"," ""base""     "
"1","
"
"1","
"
"1","[[8]]
"
"1","[1]"
"1"," ""dplyr""    "
"1"," ""stats""    "
"1"," ""graphics"" "
"1"," ""grDevices"""
"1"," ""utils""    "
"1"," ""datasets"" "
"1"," ""methods""  "
"1","
"
"1","[8]"
"1"," ""base""     "
"1","
"
"1","
"
"1","[[9]]
"
"1","[1]"
"1"," ""dplyr""    "
"1"," ""stats""    "
"1"," ""graphics"" "
"1"," ""grDevices"""
"1"," ""utils""    "
"1"," ""datasets"" "
"1"," ""methods""  "
"1","
"
"1","[8]"
"1"," ""base""     "
"1","
"
"1","
"
"1","[[10]]
"
"1","[1]"
"1"," ""dplyr""    "
"1"," ""stats""    "
"1"," ""graphics"" "
"1"," ""grDevices"""
"1"," ""utils""    "
"1"," ""datasets"" "
"1"," ""methods""  "
"1","
"
"1","[8]"
"1"," ""base""     "
"1","
"
"1","
"
"1","[[11]]
"
"1","[1]"
"1"," ""dplyr""    "
"1"," ""stats""    "
"1"," ""graphics"" "
"1"," ""grDevices"""
"1"," ""utils""    "
"1"," ""datasets"" "
"1"," ""methods""  "
"1","
"
"1","[8]"
"1"," ""base""     "
"1","
"
"1","
"
"0","# Export all required objects and functions"
"0","clusterExport(cl, varlist = c(""HRs"", ""getOC_BME"", ""simulate_scenario"", ""log""))"
"0",""
"0","# Run simulation"
"0","results_list <- parLapply(cl, 1:nrow(HRs), function(i) simulate_scenario(i, HRs))"
